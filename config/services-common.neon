includes:
	- jobs.neon
	- gate.neon
	- roadrunner.neon
	- console.neon
extensions:
	caching: Nette\Bridges\CacheDI\CacheExtension(%constants.tempDir%)
	decorator: Nette\DI\Extensions\DecoratorExtension
	inject: Nette\DI\Extensions\InjectExtension
parameters:
	gotenberg:
		host: gotenberg
		port: 3000
	routing:
		routeFiles:
			- %constants.appDir%routes
		controllers:
			- %constants.appDir%src/Controllers
	gamesSync:
		limit: 5
		timeout: 15.0
	redis:
		host: redis
services:
	# Core
	app: App\Core\App
	translations:
		create: Lsr\Core\Translations
		arguments:
			config: @config
			defaultLang: 'cs_CZ'
			supportedLanguages:
				- 'cs_CZ'
				- 'en_US'
				- 'de_DE'
				- 'fr_FR'
				- 'sk_SK'
				- 'es_ES'
			textDomains:
				- 'results'
				- 'gate'
				- 'tips'
				- 'cli'
				- 'highlights'

	version: App\Services\VersionService
	regression: App\Services\RegressionCalculator

	image: App\Services\ImageService([1000,600,250])

	redis:
		create: \Redis
		setup:
			- connect(%redis.host%)

	symfony.lock.store: Symfony\Component\Lock\Store\RedisStore(@redis)
	symfony.lock.factory: Symfony\Component\Lock\LockFactory(@symfony.lock.store)

	caching.journal: Lsr\Core\Caching\RedisJournal(@redis)
	cache.storage: Lsr\Core\Caching\RedisStorage(@redis, '', @caching.journal)
	cache: Lsr\Core\Caching\Cache(@cache.storage, null, %constants.debug%)

	events: App\Services\EventService
	features: App\Services\FeatureConfig

	liga: App\Services\LigaApi::getInstance(@metrics)
	playersProvider: App\Services\PlayerProvider

	gamesImport: App\Services\ImportService
	gamesLoad: App\Tools\GameLoading\GameLoader

	gotenberg: App\Services\GotenbergService(%gotenberg.host%, %gotenberg.port%)
	resultPrint: App\Services\ResultPrintService
	resultPrecache: App\Services\ResultsPrecacheService(mode: 'queue')

	lasermaxx.regression: App\GameModels\Tools\Lasermaxx\RegressionStatCalculator
	evo5.simulator: App\Services\Evo5\GameSimulator
	evo5.gameLoader: App\Tools\GameLoading\Evo5GameLoader
	evo6.gameLoader: App\Tools\GameLoading\Evo6GameLoader

	result.parser: App\Tools\ResultParsing\ResultsParser
	result.parser.evo5: App\Tools\ResultParsing\Evo5\ResultsParser
	result.parser.evo6: App\Tools\ResultParsing\Evo6\ResultsParser

	gameHighlight: App\Services\GameHighlight\GameHighlightService(tagged(highlightChecker))

search:
	highlightCheckers:
		in: '%constants.appDir%/src/Services/GameHighlight/Checkers'
		implements:
			- App\Services\GameHighlight\GameHighlightChecker
			- App\Services\GameHighlight\PlayerHighlightChecker
			- App\Services\GameHighlight\TeamHighlightChecker
		tags:
			- highlightChecker

decorator:
	Lsr\Core\Controllers\Controller:
		inject: true