extensions:
	caching: Nette\Bridges\CacheDI\CacheExtension(%constants.tempDir%)
	orisai.console: OriNette\Console\DI\ConsoleExtension
	orisai.scheduler: OriNette\Scheduler\DI\SchedulerExtension
parameters:
	gotenberg:
		host: gotenberg
		port: 3000
	routing:
		routeFiles:
			- %constants.appDir%routes
		controllers:
			- %constants.appDir%src/Controllers
	gamesSync:
		limit: 5
		timeout: 15.0
	redis:
		host: redis
orisai.scheduler:
	console:
		script: '%constants.appDir%bin/console'
	errorHandler: tracy
	jobs:
		gamesSync:
			expression: */5 * * * *
			callback: [@cron.gamesSync, 'run']
		vestSync:
			expression: */15 * * * *
			callback: [@cron.vestSync, 'run']
		logArchive:
			expression: 0 6 * * *
			callback: [@cron.logArchive, 'run']
services:
	- App\Services\VersionService
	- App\Services\RegressionCalculator

	redis:
		create: \Redis
		setup:
			- connect(%redis.host%)

	symfony.lock.store: Symfony\Component\Lock\Store\RedisStore(@redis)
	symfony.lock.factory: Symfony\Component\Lock\LockFactory(@symfony.lock.store)

	features: App\Services\FeatureConfig
	regression.evo5: App\GameModels\Tools\Evo5\RegressionStatCalculator
	liga: App\Services\LigaApi::getInstance()
	playersProvider: App\Services\PlayerProvider
	gotenberg: App\Services\GotenbergService(%gotenberg.host%, %gotenberg.port%)
	caching.journal: Nette\Caching\Storages\SQLiteJournal('%constants.tempDir%journal.s3db')
	evo5.simulator: App\Services\Evo5\GameSimulator
	resultPrint: App\Services\ResultPrintService
	resultPrecache: App\Services\ResultsPrecacheService

	cron.gamesSync: App\Cron\GamesSyncJob(%gamesSync.limit%, %gamesSync.timeout%)
	cron.vestSync: App\Cron\VestSyncJob
	cron.logArchive: App\Cron\LogArchiveJob