[roadrunner]
ref = "v2024.3.4"

[debug]
enabled = false

[log]
level = "info"
mode = "production"

[github.token]
token = "${RT_TOKEN}"

# ref -> master, commit or tag
[github.plugins]
# LOGS
appLogger = { ref = "v5.1.4", owner = "roadrunner-server", repository = "app-logger" }
logger = { ref = "v5.1.4", owner = "roadrunner-server", repository = "logger" }
lock = { ref = "v5.1.4", owner = "roadrunner-server", repository = "lock" }
rpc = { ref = "v5.1.4", owner = "roadrunner-server", repository = "rpc" }

# CENTRIFUGE BROADCASTING PLATFORM
centrifuge = { ref = "v5.1.4", owner = "roadrunner-server", repository = "centrifuge" }

# METRICS
metrics = { ref = "v5.1.4", owner = "roadrunner-server", repository = "metrics" }

# HTTP + MIDDLEWARE
http = { ref = "v5.2.3", owner = "roadrunner-server", repository = "http" }
gzip = { ref = "v5.1.4", owner = "roadrunner-server", repository = "gzip" }
prometheus = { ref = "v5.1.4", owner = "roadrunner-server", repository = "prometheus" }
headers = { ref = "v5.1.4", owner = "roadrunner-server", repository = "headers" }
static = { ref = "v5.1.3", owner = "roadrunner-server", repository = "static" }
proxy = { ref = "v5.1.4", owner = "roadrunner-server", repository = "proxy_ip_parser" }
send = { ref = "v5.1.3", owner = "roadrunner-server", repository = "send" }

# SERVER
server = { ref = "v5.2.5", owner = "roadrunner-server", repository = "server" }

# SERVICE aka lightweit systemd
service = { ref = "v5.1.4", owner = "roadrunner-server", repository = "service" }

# JOBS
jobs = { ref = "v5.1.4", owner = "roadrunner-server", repository = "jobs" }
amqp = { ref = "v5.1.4", owner = "roadrunner-server", repository = "amqp" }
sqs = { ref = "v5.1.4", owner = "roadrunner-server", repository = "sqs" }
nats = { ref = "v5.1.4", owner = "roadrunner-server", repository = "nats" }
kafka = { ref = "v5.1.4", owner = "roadrunner-server", repository = "kafka" }

# KV
kv = { ref = "v5.2.4", owner = "roadrunner-server", repository = "kv" }
memory = { ref = "v5.2.4", owner = "roadrunner-server", repository = "memory" }
redis = { ref = "v5.1.4", owner = "roadrunner-server", repository = "redis" }

# FILESERVER (static files)
fileserver = { ref = "v5.1.4", owner = "roadrunner-server", repository = "fileserver" }

# gRPC plugin
grpc = { ref = "v5.1.4", owner = "roadrunner-server", repository = "grpc" }

# HEALTHCHECKS + READINESS CHECKS
status = { ref = "v5.1.4", owner = "roadrunner-server", repository = "status" }

# TCP for the RAW TCP PAYLOADS
tcp = { ref = "v5.1.4", owner = "roadrunner-server", repository = "tcp" }

fileWatch = { ref = "master", owner = "LaserLiga", repository = "rr_file_watch" }