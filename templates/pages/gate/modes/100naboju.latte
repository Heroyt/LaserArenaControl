{layout '../@layout.latte'}

{varType App\GameModels\Game\Game $game}
{varType App\GameModels\Game\PrintStyle $style}
{varType App\GameModels\Game\Today $today}
{varType string $qr}

{var bool $includeTeams = $game->getMode()->isTeam() && $game->getMode()->settings->partTeams}

{define containerClasses}
	results {if !$includeTeams}no-teams{/if}
{/define}

{define content}
	<section class="info">
		{include partInfo}
	</section>
	<section class="players">
		{include partPlayers}
	</section>
	<section class="teams" n:if="$includeTeams">
		{include partTeams}
	</section>
{/define}

{define partInfo}
	{$qr|noescape}
	<h3>{lang 'On-line detailní výsledky', context: 'results'}</h3>
{/define}

{define partPlayers}
	{var int $playerCount = count($game->getPlayers())}
	<div class="player text-grey-text" n:foreach="$game->getPlayersSorted() as $player"
		 data-team="{$player->getTeam()->id}"
		 data-score="{$player->score}"
		 data-position="{$iterator->counter}"
		 data-accuracy="{$player->accuracy}"
			{if property_exists($player,'ammoRest')}
				data-ammo-start="{$game->ammo}"
				data-ammo-rest="{$player->ammoRest}"
			{/if}
		 style="--multiplier: {((-0.05 * ($playerCount - 11)) + 1)|noescape}; --delay: {$iterator->counter * 30}ms;">
		{var array $rank = $player->getBestAt()}
		<div class="position">
			{$iterator->counter}.
		</div>
		<div class="rank-name">
			<div class="name text-team-{$game::SYSTEM}-{$player->getTeamColor()}">
				{$player->name}
			</div>
			<div class="rank">
				{svgIcon $rank['icon'], '', 15}
				{$rank['name']}
				{var $count = count($player->getAllBestAt()) - 1}
				{if $count > 0}
					+&nbsp;{$count}&nbsp;<i class="fa-solid fa-trophy"></i>
				{/if}
			</div>
		</div>
		<div class="accuracy">
			<svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"
				 class="accuracy" xml:space="preserve"
				 style="--color:var(--team-evo5-{$player->getTeamColor()});fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;">
					{var int $circleRadius = 98}
				<circle class="fill-circle" r="{$circleRadius}" cx="250" cy="250" fill="transparent" stroke="tomato"
						stroke-width="{2*$circleRadius}"
						stroke-dasharray="{round($player->accuracy * pi() * 2 * $circleRadius / 100, 4)} {round(pi() * 2 * $circleRadius,4)}"/>
				<text x="250px" y="282px" font-weight="bold">
					<tspan text-anchor="middle">{$player->accuracy}%</tspan>
				</text>
				<g class="sight">
					<g transform="matrix(1,0,0,1,-55,-4)">
						<path d="M305,56C414.279,56 503,144.721 503,254C503,363.279 414.279,452 305,452C195.721,452 107,363.279 107,254C107,144.721 195.721,56 305,56ZM305,65.98C408.771,65.98 493.02,150.229 493.02,254C493.02,357.771 408.771,442.02 305,442.02C201.229,442.02 116.98,357.771 116.98,254C116.98,150.229 201.229,65.98 305,65.98Z"/>
					</g>
					<g transform="matrix(1,0,0,1,-0.5,4.5)">
						<rect x="24" y="241" width="67" height="9"/>
					</g>
					<g transform="matrix(6.12323e-17,-1,1,6.12323e-17,4.5,500.5)">
						<rect x="24" y="241" width="67" height="9"/>
					</g>
					<g transform="matrix(1,0,0,1,385.5,4.5)">
						<rect x="24" y="241" width="67" height="9"/>
					</g>
					<g transform="matrix(6.12323e-17,-1,1,6.12323e-17,4.5,114.5)">
						<rect x="24" y="241" width="67" height="9"/>
					</g>
				</g>
				</svg>
		</div>
		<div class="ammo text-end" n:if="property_exists($player,'ammoRest')">
			<span class="value">
			{$player->ammoRest}
			</span>
			{svgIcon 'bullet', '', '1em'}
		</div>
		<div class="score text-end {switch $iterator->counter}
			{case 1} text-gold
			{case 2} text-dark-silver
			{case 3} text-bronze
		   {/switch}
			{if $player->score < 0}text-danger{/if}"
			 data-class="{switch $iterator->counter}
			{case 1} text-gold
			{case 2} text-dark-silver
			{case 3} text-bronze
		   {/switch}{if $player->score < 0}text-danger{/if}">
			<span class="value">{$player->score|number:0,',','&nbsp;'|noescape}</span>
			<i class="fas fa-star"></i>
		</div>
	</div>
{/define}

{define partTeams}
    {var int $totalScore = array_sum(array_map(static function(App\GameModels\Game\Team $team){ return $team->score > 0 ? $team->score : 0;},$game->getTeams()->getAll()))}
    {var App\GameModels\Game\Team|null $win = $game->getMode()?->getWin($game)}
	<div n:foreach="$game->getTeamsSorted() as $team" class="team bg-team-{$game::SYSTEM}-{$team->color}"
													  style="height:calc({100*($team->score > 0 ? $team->score : 0) / ($totalScore > 0 ? $totalScore : 1)|noescape}% - .2rem);">
		<div class="name">
			<div class="text-center crown">
				{if is_null($win) || $win->id === $team->id}{svgIcon 'crown', '2rem'}{/if}
			</div>
			{$team->name}
		</div>
		<div class="score text-end" data-score="{$team->score}">
			<span class="value">{$team->score|number:0,',','&nbsp;'|noescape}</span> <i class="fas fa-star"></i>
		</div>
	</div>
{/define}