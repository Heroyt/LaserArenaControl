// File: _custom.scss
// Author: Tomáš Vojík <xvojik00@stud.fit.vutbr.cz>
// Bootstrap customizations.

@use 'variables/colors' as *;
@use "sass:map";
@use "functions";
@import '~bootstrap/scss/variables';
@import '~bootstrap/scss/maps';

$utilityColors: functions.getUtilityColors($custom-colors);
$theme-colors: map.merge($theme-colors, functions.getThemeColors($custom-colors));

:root {
	@each $name, $values in $custom-colors {
		@each $weight, $color in $values {
			$separator: '-';
			@if $weight == "" {
				$separator: '';
			}
			@if type-of($color) == "map" {
				--#{map.get($color, "alias")}: #{map.get($color, "color")};
				--#{$name}#{$separator}#{$weight}: #{map.get($color, "color")};
			} @else {
				--#{$name}#{$separator}#{$weight}: #{$color};
			}
		}
	}
}

$utilities-bg-colors: map.merge($utilities-bg-colors, $utilityColors);
$utilities-text-colors: map.merge($utilities-text-colors, $utilityColors);

$modal-content-bg: var(--background);
$modal-content-color: var(--text);
$btn-close-color: var(--text);

$font-sizes: map.merge(
		$font-sizes,
		(
			brand: $font-size-base * 4,
		)
);

$box-shadow: 0 .5rem 1rem var(--shadow-color, rgba($black, .15));
$box-shadow-sm: 0 .125rem .25rem var(--shadow-color, rgba($black, .075));
$box-shadow-lg: 0 1rem 3rem var(--shadow-color, rgba($black, .175));
$box-shadow-in-place: 0 0 1rem var(--shadow-color, rgba($black, .175));
$box-shadow-in-place-sm: 0 0 .25rem var(--shadow-color, rgba($black, .175));
$box-shadow-in-place-lg: 0 0 3rem var(--shadow-color, rgba($black, .175));
$box-shadow-inset: inset 0 1px 2px var(--shadow-color, rgba($black, .075));

@import '~bootstrap/scss/utilities';
@import '~bootstrap/scss/mixins';

html,
body {
	height: 100%;
	width: 100%;
}

$card-bg: map.get($theme-colors, "dark");

$utilities: map.deep-merge(
		$utilities,
		(
			"shadow": (
				values: (
					in-place: $box-shadow-in-place,
					in-place-sm: $box-shadow-in-place-sm,
					in-place-lg: $box-shadow-in-place-lg,
				)
			),
			"border-color": (
				values: $utilityColors
			),
			"min-width": (
				property: min-width,
				class: minw,
				responsive: true,
				print: true,
				values: map.merge(
						$grid-breakpoints,
						(
							50: 50%,
							100: 100%,
							200: 200px,
							300: 300px,
							xs: 50px,
						)
				),
			),
			"min-viewport-height": (
				values: (
					25: 25vh,
					50: 50vh,
					60: 60vh,
					75: 75vh,
				),
			),
			"line-height": (
				values: (
					20: 20px,
					25: 25px,
					30: 30px,
					35: 35px,
					size: var(--size, 1),
				),
			),
			'cursor': (
				property: cursor,
				class: cursor,
				responsive: false,
				print: false,
				values: (
					pointer: pointer,
					default: default,
					help: help,
					not-allowed: not-allowed,
					copy: copy,
					crosshair: crosshair,
					move: move,
					grab: grab,
					grabbing: grabbing,
				),
			),
			'font-size': (
				values: (
					sm: .6rem,
				),
			),
			"rounded": (
				values: (
					10: 10px,
				)
			),
			"rounded-top": (
				values: (
					10: 10px
				)
			),
			"rounded-end": (
				values: (
					10: 10px
				)
			),
			"rounded-bottom": (
				values: (
					10: 10px
				)
			),
			"rounded-start": (
				values: (
					10: 10px
				)
			),
		),
);
