{layout '@layout.latte'}

{varType App\GameModels\Game\Game|null $game}
{varType int $gameCount}
{varType int $teamCount}
{varType int $playerCount}

{varType App\GameModels\Game\Player[] $topScores}
{varType App\GameModels\Game\Player|null $topHits}
{varType App\GameModels\Game\Player|null $topDeaths}
{varType App\GameModels\Game\Player|null $topAccuracy}
{varType App\GameModels\Game\Player|null $topShots}

{define containerClasses}
	today
{/define}

{define content}
	<h1 class="title text-center text-white-forced">{lang 'Výsledky dne', context: 'gate'}</h1>

	<div class="score d-flex flex-column justify-content-between align-items-stretch">

		<div class="d-flex flex-column shadow">
			<div class="print-dark text-center rounded-top-10 py-3 fw-bold">
				{svgIcon 'star', '', '2rem'}
				{lang 'Nejlepší skóre dne', context: 'gate'}
			</div>
			<div n:for="$i = 1; $i < 4; $i++"
					class="text-center py-2 d-flex bg-white-forced flex-fill {if $i === 3}rounded-bottom-10{else}bbd{/if}">
				<div class="col-2 fw-light">{$i}.</div>
				<div class="col-6">
					{ifset $topScores[$i-1]}
						{$topScores[$i-1]->name}
					{/ifset}
				</div>
				<div class="col-4 fw-bold">
					{ifset $topScores[$i-1]}
						{$topScores[$i-1]->score}
						<i class="fas fa-star"></i>
					{/ifset}
				</div>
			</div>
		</div>

		<div class="d-flex text-center shadow">
			<div class="flex-fill rounded-start-10 print-dark d-flex align-items-center justify-content-center py-2 fw-bold">
				<div>
					{svgIcon 'gun', '', '2.5rem'}
					{lang 'Odehráno her', context: 'results'}
				</div>
			</div>
			<div class="bg-white-forced rounded-end-10 d-flex align-items-center justify-content-center col-4">
				{$gameCount}
			</div>
		</div>
	</div>

	<div class="best d-flex flex-column shadow">
		<div class="text-center d-flex flex-fill-same bbd">
			<div class="print-dark py-1 fw-bold d-flex align-items-center justify-content-center flex-fill-same"
				 style="border-top-left-radius: 10px;">
				<div>
					{svgIcon 'target', '', '2.5rem'}
					{lang 'Sniper', context: 'results'}
				</div>
			</div>
			<div class="flex-fill-same bg-white-forced py-1 d-flex align-items-center justify-content-center"
				 style="border-top-right-radius: 10px;">
				{ifset $topAccuracy}
					{$topAccuracy->name} ({$topAccuracy->accuracy}%)
				{/ifset}
			</div>
		</div>
		<div class="text-center d-flex flex-fill-same bbd">
			<div class="print-dark py-1 fw-bold d-flex align-items-center justify-content-center flex-fill-same">
				<div>
					{svgIcon 'bullets', '', '2.5rem'}
					{lang 'Mega střelec', context: 'results'}
				</div>
			</div>
			<div class="flex-fill-same bg-white-forced py-1 d-flex align-items-center justify-content-center">
				{ifset $topShots}
					{$topShots->name} ({sprintf(lang('%d shot', '%d shots', $topShots->shots, 'results'), $topShots->shots)})
				{/ifset}
			</div>
		</div>
		<div class="text-center d-flex flex-fill-same bbd">
			<div class="print-dark py-1 fw-bold d-flex align-items-center justify-content-center flex-fill-same">
				<div>
					{svgIcon 'predator', '', '2.5rem'}
					{lang 'Predátor', context: 'results'}
				</div>
			</div>
			<div class="flex-fill-same bg-white-forced py-1 d-flex align-items-center justify-content-center">
				{ifset $topHits}
					{$topHits->name} ({sprintf(lang('%d hit', '%d hits', $topHits->hits, 'results'), $topHits->hits)})
				{/ifset}
			</div>
		</div>
		<div class="text-center d-flex flex-fill-same">
			<div class="print-dark py-1 fw-bold d-flex align-items-center justify-content-center flex-fill-same"
				 style="border-bottom-left-radius: 10px;">
				<div>
					{svgIcon 'skull', '', '2.5rem'}
					{lang 'Cíl', context: 'results'}
				</div>
			</div>
			<div class="flex-fill-same bg-white-forced py-1 d-flex align-items-center justify-content-center"
				 style="border-bottom-right-radius: 10px;">
				{ifset $topDeaths}
					{$topDeaths->name} ({sprintf(lang('%d death', '%d deaths', $topDeaths->deaths, 'results'), $topDeaths->deaths)})
				{/ifset}
			</div>
		</div>
	</div>

	<div class="timer" n:if="isset($game) && !$game->finished">
		{var int $left = ($game->timing->gameLength * 60) - (time() - $game->start->getTimestamp())}
		<div class="time text-white-forced {if $left < 0}d-none{/if}"
			 data-start="{$game->start->getTimestamp()}"
			 data-startdate="{$game->start->format('Y-m-d H:i')}"
			 data-showafter="{\App\Core\Info::get('timer_show', 30)}"
			 data-length="{$game->timing->gameLength * 60}" data-serverTime="{time()}">
			{floor($left / 60)|padLeft:2,'0'}:{($left % 60)|padLeft:2,'0'}
		</div>
	</div>
{/define}