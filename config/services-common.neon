extensions:
	caching: Nette\Bridges\CacheDI\CacheExtension(%constants.tempDir%)
	orisai.console: OriNette\Console\DI\ConsoleExtension
	orisai.scheduler: OriNette\Scheduler\DI\SchedulerExtension
parameters:
	gotenberg:
		host: gotenberg
		port: 3000
	routing:
		routeFiles:
			- %constants.appDir%routes
		controllers:
			- %constants.appDir%src/Controllers
	gamesSync:
		limit: 5
		timeout: 15.0
	redis:
		host: redis
	rpc:
		connection: 'tcp://localhost:6001'
	jobs:
		queue: tasks
orisai.console:
	name: 'Laser arena Control'
orisai.scheduler:
	console:
		script: '%constants.appDir%bin/console'
	errorHandler: tracy
	jobs:
		gamesSync:
			expression: */5 * * * *
			callback: [@cron.gamesSync, 'run']
		#gamesPrecache:
		#	expression: * * * * *
		#	callback: [@cron.gamesPrecache, 'run']
		vestSync:
			expression: */15 * * * *
			callback: [@cron.vestSync, 'run']
		logArchive:
			expression: 0 6 * * *
			callback: [@cron.logArchive, 'run']
		resultsImport:
			expression: * * * * *
			callback: [@cron.resultsImport, 'run']
services:
	version: App\Services\VersionService
	regression: App\Services\RegressionCalculator

	image: App\Services\ImageService([1000,600,250])

	rpc:
		type: Spiral\Goridge\RPC\RPC
		create: Spiral\Goridge\RPC\RPC::create(%rpc.connection%)
	redis:
		create: \Redis
		setup:
			- connect(%redis.host%)

	symfony.lock.store: Symfony\Component\Lock\Store\RedisStore(@redis)
	symfony.lock.factory: Symfony\Component\Lock\LockFactory(@symfony.lock.store)

	caching.journal: Lsr\Core\Caching\RedisJournal(@redis)
	cache.storage: Lsr\Core\Caching\RedisStorage(@redis, '', @caching.journal)
	cache: Lsr\Core\Caching\Cache(@cache.storage, null, %constants.debug%)

	events: App\Services\EventService
	features: App\Services\FeatureConfig

	liga: App\Services\LigaApi::getInstance()
	playersProvider: App\Services\PlayerProvider

	gamesImport: App\Services\ImportService
	gamesLoad: App\Tools\GameLoading\GameLoader

	gotenberg: App\Services\GotenbergService(%gotenberg.host%, %gotenberg.port%)
	resultPrint: App\Services\ResultPrintService
	resultPrecache: App\Services\ResultsPrecacheService(mode: 'queue')

	lasermaxx.regression: App\GameModels\Tools\Lasermaxx\RegressionStatCalculator
	evo5.simulator: App\Services\Evo5\GameSimulator
	evo5.gameLoader: App\Tools\GameLoading\Evo5GameLoader
	evo6.gameLoader: App\Tools\GameLoading\Evo6GameLoader

	cron.gamesSync: App\Cron\GamesSyncJob(%gamesSync.limit%, %gamesSync.timeout%)
	cron.vestSync: App\Cron\VestSyncJob
	cron.logArchive: App\Cron\LogArchiveJob
	cron.gamesPrecache: App\Cron\GamesPrecacheJob
	cron.resultsImport: App\Cron\ResultsImportJob

	# Jobs queue
	jobs: Spiral\RoadRunner\Jobs\Jobs
	queue:
		type: Spiral\RoadRunner\Jobs\QueueInterface
		create: @jobs::connect(%jobs.queue%)
	taskProducer: App\Services\TaskProducer(@queue)

	# Jobs tasks
	task.gamesPrecache: App\Tasks\GamePrecacheTask

	result.parser: App\Tools\ResultParsing\ResultsParser
	result.parser.evo5: App\Tools\ResultParsing\Evo5\ResultsParser
	result.parser.evo6: App\Tools\ResultParsing\Evo6\ResultsParser

	# Gate
	gate: App\Gate\Gate
	gate.screens.vests: App\Gate\Screens\VestsScreen
	gate.screens.timer: App\Gate\Screens\TimerScreen
	gate.screens.image: App\Gate\Screens\ImageScreen
	gate.screens.youtube: App\Gate\Screens\YoutubeScreen
	gate.screens.idle.stats: App\Gate\Screens\GeneralDayStatsScreen
	gate.screens.results: App\Gate\Screens\Results\ResultsScreen
	gate.screens.results.lasermaxx.rankable: App\Gate\Screens\Results\LaserMaxxRankableResultsScreen
	gate.screens.results.lasermaxx.csgo: App\Gate\Screens\Results\LaserMaxxCSGOResultsScreen
	gate.screens.results.lasermaxx.zakladny: App\Gate\Screens\Results\LaserMaxxZakladnyResultsScreen
	gate.screens.results.lasermaxx.100naboju: App\Gate\Screens\Results\LaserMaxx100NabojuResultsScreen
	gate.screens.results.lasermaxx.survival: App\Gate\Screens\Results\LaserMaxxSurvivalResultsScreen

	# Commands
	command.cache.clean: App\Cli\Commands\Cache\CleanCacheCommand
	command.games.import: App\Cli\Commands\Games\ImportGameCommand
	command.games.sync: App\Cli\Commands\Games\SyncGameCommand
	command.games.skills: App\Cli\Commands\Games\RecalculateSkillsGameCommand
	command.regression.hits: App\Cli\Commands\Regression\CalculateHitsRegressionCommand
	command.regression.hitsOwn: App\Cli\Commands\Regression\CalculateHitsOwnRegressionCommand
	command.regression.deaths: App\Cli\Commands\Regression\CalculateDeathsRegressionCommand
	command.regression.deathsOwn: App\Cli\Commands\Regression\CalculateDeathsOwnRegressionCommand
	command.regression.update: App\Cli\Commands\Regression\UpdateRegressionModelsCommand
	command.translation.compile: App\Cli\Commands\Translation\CompileTranslationsCommand
	command.translation.removeComments: App\Cli\Commands\Translation\RemoveCommentsCommand