{templateType App\Templates\Results\ResultsParams}

{define addHead}
    <link rel="stylesheet" href="{getUrl}dist/results/graphical.css?v={$app->getCacheVersion()}">
{/define}

{var array $fontSize = [
10 => 6,
11 => 5,
12 => 4,
]}
{var array $fontSizeHits = [
8 => 6,
9 => 6,
10 => 5,
11 => 4,
12 => 4,
]}

{define teamColor}
    {default int $teamColor = 0}
    <span class="team-color bg-team-{$teamColor}"></span>
{/define}

{define containerClasses}
	template-graphical {if $game->mode?->isSolo()}solo{/if} {if $game->mode?->settings?->partHits && count($game->players) < 7}less-players{/if}
{/define}

{define content}
    {include resultsHeader}
	{if $game->mode?->isTeam() && $game->mode?->settings?->partTeams}
        {include resultsTeams}
    {/if}
	{if $game->mode?->settings?->partPlayers}
        {include resultsPlayers}
    {/if}
	{if $game->mode?->settings?->partHits && count($game->players) < 7}
        {include resultsHits}
    {/if}
    {include legend}
{/define}

{define legend}
	{var bool $minesOn = method_exists($game, 'isMinesOn') && $game->isMinesOn() && $game->mode?->settings?->playerMines}
    {cache 'results-'.$lang.'-graphical-legend'.($minesOn ? '-withMines' : ''), tags: ['templates.results', 'templates.results.graphical', 'templates', 'templates.'.$lang]}
        <div class="results-legend">
            <div class="legend">
                {svgIcon 'star', '', '1em'} - {_'Skóre', domain: 'results'}
            </div>
            <div class="legend">
                {svgIcon 'bullets', '', '1em'} - {_'Výstřely', domain: 'results'}
            </div>
            <div class="legend">
                {svgIcon 'kill', '', '1em'} - {_'Zásahy', domain: 'results'}
            </div>
            <div class="legend">
                {svgIcon 'skull', '', '1em'} - {_'Smrti', domain: 'results'}
            </div>
            <div class="legend">
                {svgIcon 'dead', '', '1em'} - {_'Zásahy od/do spoluhráčů', domain: 'results'}
            </div>
            {if $minesOn}
                <div class="legend">
                    {svgIcon 'base_2', '', '1em'} - {_'Bonusy', domain: 'results'}
                </div>
                <div class="legend">
                    {svgIcon 'agent', '', '1em'} - {_'Agent', domain: 'results', context: 'bonus'}
                </div>
                <div class="legend">
                    {svgIcon 'invisibility', '', '1em'} - {_'Neviditelnost', domain: 'results', context: 'bonus'}
                </div>
                <div class="legend">
                    {svgIcon 'machine_gun', '', '1em'} - {_'Samopal', domain: 'results', context: 'bonus'}
                </div>
                <div class="legend">
                    {svgIcon 'shield', '', '1em'} - {_'Štít', domain: 'results', context: 'bonus'}
                </div>
            {/if}
        </div>
    {/cache}
{/define}

{define resultsWin}
	{var App\GameModels\Game\Player|App\GameModels\Game\Team|null $win = $game->mode?->getWin($game)}
    <div class="results-win">
        {if is_null($win)}
            <div style="--team-color: var(--print-primary);">
                {_'Remíza', domain: 'results'}
            </div>
        {elseif $win instanceof App\GameModels\Game\Team}
            <div style="--team-color: var(--team-{$win->color});">
                {_'Vítězství', domain: 'results'}: {$win->name}
            </div>
        {elseif $win instanceof App\GameModels\Game\Player}
			<div style="--team-color: var({if $game->mode?->isSolo()}--print-primary{else}--team{$win->team->color}{/if});">
                {_'Vítězství', domain: 'results'}: {$win->name}
            </div>
        {/if}
    </div>
{/define}

{define resultsHeader}
    <div class="results-header text-black text-start">
        <div class="my-1">
            <strong>{_'Kód hry', domain: 'results', context: 'info'}:</strong>
            {$game->code} {ifset $game->fileNumber}({$game->fileNumber}){/ifset}
        </div>
        <div class="my-1">
            <strong>{_'Datum', domain: 'results', context: 'info'}:</strong>
            {$game->start->format('d.m.Y H:i:s')}
        </div>
        <div class="my-1">
            <strong>{_'Herní mód', domain: 'results', context: 'info'}:</strong>
			{_$game->mode?->getName(), domain: 'gameModes'}
        </div>
        <div n:if="$game->getMusic() !== null">
            <strong>{_'Hudební mód', domain: 'results', context: 'info'}:</strong>
            {$game->getMusic()->name}
        </div>
    </div>
    <div class="results-qr text-end text-black">
        <div class="me-2">
            <div class="fw-bold">{_'On-line detailní výsledky', domain: 'results'}:</div>
            <a href="{$publicUrl}" class="d-block mb-2 text-black">{$publicUrl}</a>
        </div>
        {$qr|noescape}
    </div>
{/define}

{define resultsPlayers}
    {var int $maxScore = $game->getMaxScore()}
    {var int $minScore = $game->getMinScore()}
	{var int $maxShots = $game->players->query()->sortBy('shots')->desc()->first()->shots}
    {var int $totalHeight = $maxScore - ($minScore < 0 ? $minScore : 0)}
	{var int $count = count($game->players)}
    <section class="results-players" style="grid-template-columns: repeat({$count}, 1fr);">
		{foreach $game->playersSorted as $player}
			{varType App\GameModels\Game\Player $player}
            <div class="results-player rounded bg-white flex-fill"
				 style="--team-color: var(--team-{$player->color});">
                <div class="player-head">
                    {var array $rank = $player->getBestAt()}
                    {svgIcon $rank['icon'], '', 15}
                    {var int $len = strlen($player->name)}
					<div class="player-name text-center text-team-{$player->color}"
                         {ifset $fontSize[$len]}style="--font-size: {$fontSize[$len]}pt;"{/ifset}>
                        {$player->name}
                    </div>
                    <div class="player-rank">
                        <div class="rank-name fs-sm">{$rank['name']}</div>
                    </div>
                </div>
                {include playerScore, $player, $totalHeight, $minScore}
                {include playerAccuracy, $player}
                {include playerShots, $player, $maxShots}
                {include playerHits, $player}
                {include playerFavourites, $player}
                {if method_exists($game, 'isMinesOn') && $game->isMinesOn() && $game->mode?->settings?->playerMines}
                    {include playerMines, $player}
                {/if}
            </div>
        {/foreach}
    </section>
{/define}

{define playerMines, App\GameModels\Game\Lasermaxx\Player $player}
    <div class="player_mines mt-2">
        {svgIcon 'base_2', '2rem'}
        <div class="bonus" n:ifset="$player->bonus">
            <div n:foreach="$player->bonus->getArray() as $name => $value" class="{$name}">
                {svgIcon $name, '', '0.8rem'}
                {$value}
            </div>
        </div>
    </div>
{/define}

{define playerShots, App\GameModels\Game\Player $player, int $maxShots}
	<div n:if="$game->mode?->settings?->playerShots" class="player-shots">
        {var int $step = ceil(($maxShots === 0 ? 1000 : $maxShots) / 10)}
        {var int $count = ceil($player->shots / $step)}
        <svg viewBox="0 0 1720 504" class="mb-1">
            <g n:for="$i = 0; $i < $count; $i++" transform="translate({172*$i})">
                <g transform="matrix(1,0,0,1,-167,0)">
                    <path d="M335.738,436.459L335.738,184.656C335.738,180.014 331.986,176.263 327.345,176.263L176.263,176.263C171.621,176.263 167.87,180.015 167.87,184.656L167.87,436.459C167.87,441.101 171.622,444.852 176.263,444.852L176.263,453.245C171.621,453.245 167.87,456.997 167.87,461.638L167.87,495.212C167.87,499.854 171.622,503.605 176.263,503.605L327.345,503.605C331.987,503.605 335.738,499.853 335.738,495.212L335.738,461.64C335.738,456.998 331.986,453.247 327.345,453.247L327.345,444.854C331.986,444.853 335.738,441.101 335.738,436.459Z"
                          style="fill-rule:nonzero;"/>
                    <path d="M184.656,159.478L318.951,159.478C323.593,159.478 327.344,155.726 327.344,151.085L327.344,142.692C327.344,87.514 300.98,34.803 256.839,1.682C253.851,-0.559 249.755,-0.559 246.767,1.682C202.626,34.803 176.262,87.513 176.262,142.692L176.262,151.085C176.263,155.726 180.014,159.478 184.656,159.478Z"
                          style="fill-rule:nonzero;"/>
                </g>
            </g>
            <g class="empty" n:for="; $i < 10; $i++" transform="translate({172*$i})">
                <g transform="matrix(1,0,0,1,-167,0)">
                    <path d="M335.738,436.459L335.738,184.656C335.738,180.014 331.986,176.263 327.345,176.263L176.263,176.263C171.621,176.263 167.87,180.015 167.87,184.656L167.87,436.459C167.87,441.101 171.622,444.852 176.263,444.852L176.263,453.245C171.621,453.245 167.87,456.997 167.87,461.638L167.87,495.212C167.87,499.854 171.622,503.605 176.263,503.605L327.345,503.605C331.987,503.605 335.738,499.853 335.738,495.212L335.738,461.64C335.738,456.998 331.986,453.247 327.345,453.247L327.345,444.854C331.986,444.853 335.738,441.101 335.738,436.459Z"
                          fill="transparent" stroke="#000"/>
                    <path d="M184.656,159.478L318.951,159.478C323.593,159.478 327.344,155.726 327.344,151.085L327.344,142.692C327.344,87.514 300.98,34.803 256.839,1.682C253.851,-0.559 249.755,-0.559 246.767,1.682C202.626,34.803 176.262,87.513 176.262,142.692L176.262,151.085C176.263,155.726 180.014,159.478 184.656,159.478Z"
                          fill="transparent" stroke="#000"/>
                </g>
            </g>
        </svg>
        <div class="number">{_'Výstřely', domain: 'results', context: 'player'}
            : {svgIcon 'bullets', '', '1em'} {$player->shots|number:0,',','&nbsp;'|noescape}</div>
    </div>
{/define}

{define playerAccuracy, App\GameModels\Game\Player $player}
	<svg n:if="$game->mode?->settings?->playerAccuracy" viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"
                                                             class="accuracy" xml:space="preserve"
														style="--color:var(--team-{$player->color});fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;">
					{var int $circleRadius = 98}
        <circle class="fill-circle" r="{$circleRadius}" cx="250" cy="250" fill="transparent" stroke="tomato"
                stroke-width="{2*$circleRadius}"
                stroke-dasharray="{round($player->accuracy * pi() * 2 * $circleRadius / 100, 4)} {round(pi() * 2 * $circleRadius,4)}"/>
        <text x="250px" y="282px" font-weight="bold">
            <tspan text-anchor="middle">{$player->accuracy}%</tspan>
        </text>
        <g class="sight">
            <g transform="matrix(1,0,0,1,-55,-4)">
                <path d="M305,56C414.279,56 503,144.721 503,254C503,363.279 414.279,452 305,452C195.721,452 107,363.279 107,254C107,144.721 195.721,56 305,56ZM305,65.98C408.771,65.98 493.02,150.229 493.02,254C493.02,357.771 408.771,442.02 305,442.02C201.229,442.02 116.98,357.771 116.98,254C116.98,150.229 201.229,65.98 305,65.98Z"/>
            </g>
            <g transform="matrix(1,0,0,1,-0.5,4.5)">
                <rect x="24" y="241" width="67" height="9"/>
            </g>
            <g transform="matrix(6.12323e-17,-1,1,6.12323e-17,4.5,500.5)">
                <rect x="24" y="241" width="67" height="9"/>
            </g>
            <g transform="matrix(1,0,0,1,385.5,4.5)">
                <rect x="24" y="241" width="67" height="9"/>
            </g>
            <g transform="matrix(6.12323e-17,-1,1,6.12323e-17,4.5,114.5)">
                <rect x="24" y="241" width="67" height="9"/>
            </g>
        </g>
				</svg>
{/define}

{define playerHits, App\GameModels\Game\Player $player}
    <h4 class="mt-2 mb-0">{_'Zásahy', domain: 'results', context: 'player'}:</h4>
    {var int $total = $player->hits + $player->deaths}
	<div n:if="$game->mode?->settings?->playerPlayers" class="hits mt-1 mb-2">
		{var int $hits = $game->mode?->isTeam() ? $player->hitsOther : $player->hits}
        {var int $deaths = $game->mode?->isTeam() ? $player->deathsOther : $player->deaths}
        <div class="kills-row" style="height:{100*$player->hits / ($total > 0 ? $total : 1)|noescape}%;">
            <div class="kills" style="width:{100*$hits / ($player->hits > 0 ? $player->hits : 1)|noescape}%;">
                <div class="main">
                    <div class="icon">
                        {svgIcon 'kill', '', '1rem'}
                    </div>
                    <div class="number">
                        {$hits}
                    </div>
                </div>
            </div>
			<div n:if="$game->mode?->settings?->playerPlayersTeams && $game->mode?->isTeam()"
                    class="kills-own"
                    style="width: {100*($player->hitsOwn / ($player->hits > 0 ? $player->hits : 1))|noescape}%;">
                <div class="main">
                    <div class="icon">
                        {svgIcon 'dead', '', '1rem'}
                    </div>
                    <div class="number">{$player->hitsOwn}</div>
                </div>
            </div>
        </div>
        <div class="deaths-row" style="height:{100*$player->deaths / ($total > 0 ? $total : 1)|noescape}%;">
            <div class="deaths" style="width:{100*$deaths / ($player->deaths > 0 ? $player->deaths : 1)|noescape}%;">
                <div class="main">
                    <div class="icon">
                        {svgIcon 'skull', '', '1rem'}
                    </div>
                    <div class="number">
                        {$deaths}
                    </div>
                </div>
            </div>
			<div n:if="$game->mode?->settings?->playerPlayersTeams && $game->mode?->isTeam()"
                    class="deaths-own"
                    style="width: {100*($player->deathsOwn / ($player->deaths > 0 ? $player->deaths : 1))|noescape}%;">
                <div class="main">
                    <div class="icon">
                        {svgIcon 'dead', '', '1rem'}
                    </div>
                    <div class="number">{$player->deathsOwn}</div>
                </div>
            </div>
        </div>
    </div>
{/define}

{define playerScore, App\GameModels\Game\Player $player, float $totalHeight, int $minScore}
    {var float $height = 100 * abs($player->score) / ($totalHeight > 0 ? $totalHeight : 1)}
    {var float $bottom = $player->score < 0 ? 0 : 100 * abs($minScore > 0 ? 0 : $minScore) / ($totalHeight > 0 ? $totalHeight : 1)}
	<div n:if="$game->mode?->settings?->playerScore" class="score-shadow mb-1 rounded">
        <div class="score">
            <div class="score-number" style="bottom: {$height+$bottom|noescape}%;">
                {faSolid 'star'} {$player->score|number:0,',','&nbsp;'|noescape}
            </div>
			<div class="inner bg-team-{$player->color}"
                 style="height: {$height|noescape}%;bottom:{$bottom|noescape}%;"></div>
            <div class="line" style="bottom:{($player->score < 0 ? $height : $bottom)|noescape}%;"></div>
        </div>
    </div>
{/define}

{define playerFavourites, App\GameModels\Game\Player $player}
	{var App\GameModels\Game\Player|null $favourite = $player->favouriteTarget}
	{var App\GameModels\Game\Player|null $favouriteOf = $player->favouriteTargetOf}
	<div n:if="$game->mode?->settings?->playerFavourites" class="player-favourites text-center">
        <div n:if="isset($favourite)" class="favourite-target">
            <strong>{_'Nejoblíbenější cíl', domain: 'results', context: 'player'}:</strong>
			<div class="player-name text-team-{$game->mode?->isSolo() ? 2 : $favourite->color}">
                {$favourite->name}
            </div>
            <div class="number">
                {var int $hits = $player->getHitsPlayer($favourite)}
                {_'%d zabití', plural: '%d zabití', num: $hits, domain: 'results', format: [$hits]}
            </div>
        </div>
        <div n:if="isset($favouriteOf)" class="favourite-target-of">
            <strong>{_'Největší zabiják', domain: 'results', context: 'player'}:</strong>
			<div class="player-name text-team-{$game->mode?->isSolo() ? 2 : $favouriteOf->color}">
                {$favouriteOf->name}
            </div>
            <div class="number">
                {var int $deaths = $favouriteOf->getHitsPlayer($player)}
                {_'%d smrt', plural: '%d smrtí', num: $deaths, domain: 'results', format: [$deaths]}
            </div>
        </div>
    </div>
{/define}

{define resultsTeams}
	{varType App\GameModels\Game\Team $team}
	{var int $totalScore = array_sum(array_map(function($team){ return $team->score > 0 ? $team->score : 0;},$game->teams->getAll()))}
	{var App\GameModels\Game\Team|null $win = $game->mode?->getWin($game)}
    <div class="results-teams">
		<div n:foreach="$game->teamsSorted as $team" class="team-score rounded"
                                                          style="--team-color: var(--team-{$team->color}); width:{100*($team->score > 0 ? $team->score : 0) / ($totalScore > 0 ? $totalScore : 1)|noescape}%;">
            {if is_null($win) || $win->id === $team->id}{svgIcon 'crown', '1rem'}{/if}
            <div class="name">{$team->name}</div>
            <div class="score">{faSolid 'star'} {$team->score|number:0,',','&nbsp;'|noescape}</div>
        </div>
    </div>
{/define}

{define resultsHits}
	{var int $playerCount = count($game->players)}
    {var float $width = 87.5 / ($playerCount === 0 ? 1 : $playerCount)}
    <section class="results-hits">
        <h4 class="caption">
            {svgIcon 'kill', '', '1rem'}
            {_'Zásahy hráčů', domain: 'results', context: 'hits'}
        </h4>
		<div n:foreach="$game->playersSorted as $player"
        {varType App\GameModels\Game\Player $player}
		{var int $len = strlen($player->name)}
                class="player-hits w-100 bg-white rounded px-1 py-2 d-flex mt-1 align-items-center">
            <div class="player pe-1 border-end" style="width: 17.5%;">
				<div class="text-uppercase fw-bold text-team-{$player->color}"
                     {ifset $fontSizeHits[$len]}style="--font-size: {$fontSizeHits[$len]}pt;"{/ifset}>
                    {$player->name}
                </div>
                <div class="fs-sm">
                    {_'Zasáhl si hráče', domain: 'results', context: 'hits'}:
                </div>
            </div>
			<div n:foreach="$game->playersSorted->getAll() as $player2"
					{varType App\GameModels\Game\Player $player2}
                    style="width: {$width|noescape}%;" {var int $len2 = strlen($player2->name)}
					class="text-center px-1 {if $player->id === $player2->id}text-muted{elseif $player->favouriteTarget?->id === $player2->id}fw-bold text-print-primary{/if}">
				<div class="player-hit-name text-uppercase fw-bold {if $player->id !== $player2->id}text-team-{$player2->color}{/if}"
                     {ifset $fontSizeHits[$len2]}style="--font-size: {$fontSizeHits[$len2]}pt;"{/ifset}>
                    {$player2->name}
                </div>
                <div class="">
                    {$player->getHitsPlayer($player2)}
                </div>
            </div>
        </div>
    </section>
{/define}